name: recall

networks:
  dev:

services:
  nginx:
    container_name: recall-nginx
    image: nginx:1.27.3-alpine
    restart: always
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - $CERTBOT_PATH/www/:/var/www/certbot/:ro
      - $CERTBOT_PATH/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - dev
  certbot:
    image: certbot/certbot:latest
    volumes:
      - $CERTBOT_PATH/www/:/var/www/certbot/:rw
      - $CERTBOT_PATH/conf/:/etc/letsencrypt/:rw
    networks:
      - dev
  frontend:
    container_name: recall-frontend
    build: $RECALL_FRONTEND_PATH
    restart: always
    ports:
      - "8080:8080"
    networks:
      - dev
    healthcheck:
      test: "curl -f http://127.0.0.1:8080/"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  backend:
    container_name: recall-backend
    build: .
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - dev
    deploy:
      resources:
        limits:
          memory: 6G
  minio-setup:
    container_name: recall-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    image: minio/mc:latest
    env_file:
      - ./config/minio-server.env
      - ./config/minio-backend.env
    environment:
      - "MINIO_SERVER_HOSTNAME=http://minio:9000"
    volumes:
      - recall-minio-volume:/mnt/minio-volume
      - ./config/minio-setup.sh:/setup.sh
    entrypoint: bash /setup.sh
    restart: on-failure
    networks:
      - dev
  minio:
    container_name: recall-minio
    image: minio/minio:latest
    environment:
      - MINIO_CONFIG_ENV_FILE=/etc/config.env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - recall-minio-volume:/mnt/minio-volume
      - ./config/minio-server.env:/etc/config.env
    command: server --console-address ":9001"
    healthcheck:
      test: "curl -f http://localhost:9000/minio/health/live"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: always
    networks:
      - dev
  postgres:
    image: postgres:17.0-alpine
    container_name: recall-postgres
    env_file: ./config/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - recall-pgdata-volume:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U backend -d recall_db"
      interval: 3s
      timeout: 3s
      start_period: 5s
      retries: 5
    restart: always
    networks:
      - dev
  ollama-setup:
    build: ./config/ollama-setup-container
    container_name: recall-ollama-setup
    depends_on:
      - ollama
    env_file: ./config/ollama.env
    restart: on-failure
    networks:
      - dev
  ollama:
    container_name: recall-ollama
    image: ollama/ollama
    volumes:
      - recall-ollama-volume:/root/.ollama
    ports:
      - "11434:11434"
    restart: always
    networks:
      - dev

volumes:
  recall-minio-volume:
    driver_opts:
      type: none
      o: bind
      device: $MINIO_VOLUME_PATH
  recall-pgdata-volume:
    driver_opts:
      type: none
      o: bind
      device: $POSTGRES_VOLUME_PATH
  recall-ollama-volume:
    driver_opts:
      type: none
      o: bind
      device: $OLLAMA_VOLUME_PATH
